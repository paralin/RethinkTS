// Code generated by protoc-gen-go.
// source: github.com/paralin/rethinkts/metric/metric.proto
// DO NOT EDIT!

/*
Package metric is a generated protocol buffer package.

It is generated from these files:
	github.com/paralin/rethinkts/metric/metric.proto

It has these top-level messages:
	GeoLocation
	MetricIdentifier
	MetricSeries
	MetricDatapoint
	MetricDatapointWithMeta
	MetricDatapointQuery
*/
package metric

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MetricSeries_MetricDataType int32

const (
	MetricSeries_NUMBER MetricSeries_MetricDataType = 0
)

var MetricSeries_MetricDataType_name = map[int32]string{
	0: "NUMBER",
}
var MetricSeries_MetricDataType_value = map[string]int32{
	"NUMBER": 0,
}

func (x MetricSeries_MetricDataType) String() string {
	return proto.EnumName(MetricSeries_MetricDataType_name, int32(x))
}
func (MetricSeries_MetricDataType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor1, []int{2, 0}
}

type MetricSeries_MetricDeduplicationStrategy int32

const (
	// Don't allow two points with same timestamp by default
	MetricSeries_NONE MetricSeries_MetricDeduplicationStrategy = 0
	// Create a column with 'nonce', expects all incoming lines to have a nonce hash.
	MetricSeries_NONCE MetricSeries_MetricDeduplicationStrategy = 1
)

var MetricSeries_MetricDeduplicationStrategy_name = map[int32]string{
	0: "NONE",
	1: "NONCE",
}
var MetricSeries_MetricDeduplicationStrategy_value = map[string]int32{
	"NONE":  0,
	"NONCE": 1,
}

func (x MetricSeries_MetricDeduplicationStrategy) String() string {
	return proto.EnumName(MetricSeries_MetricDeduplicationStrategy_name, int32(x))
}
func (MetricSeries_MetricDeduplicationStrategy) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor1, []int{2, 1}
}

type MetricSeries_MetricTagMeta_MetricTagIndexType int32

const (
	MetricSeries_MetricTagMeta_NONE     MetricSeries_MetricTagMeta_MetricTagIndexType = 0
	MetricSeries_MetricTagMeta_STANDARD MetricSeries_MetricTagMeta_MetricTagIndexType = 1
	MetricSeries_MetricTagMeta_GEOPOINT MetricSeries_MetricTagMeta_MetricTagIndexType = 2
)

var MetricSeries_MetricTagMeta_MetricTagIndexType_name = map[int32]string{
	0: "NONE",
	1: "STANDARD",
	2: "GEOPOINT",
}
var MetricSeries_MetricTagMeta_MetricTagIndexType_value = map[string]int32{
	"NONE":     0,
	"STANDARD": 1,
	"GEOPOINT": 2,
}

func (x MetricSeries_MetricTagMeta_MetricTagIndexType) String() string {
	return proto.EnumName(MetricSeries_MetricTagMeta_MetricTagIndexType_name, int32(x))
}
func (MetricSeries_MetricTagMeta_MetricTagIndexType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor1, []int{2, 1, 0}
}

// Equivilent to Point in RethinkDB
type GeoLocation struct {
	Latitude  float64 `protobuf:"fixed64,1,opt,name=latitude" json:"latitude,omitempty"`
	Longitude float64 `protobuf:"fixed64,2,opt,name=longitude" json:"longitude,omitempty"`
}

func (m *GeoLocation) Reset()                    { *m = GeoLocation{} }
func (m *GeoLocation) String() string            { return proto.CompactTextString(m) }
func (*GeoLocation) ProtoMessage()               {}
func (*GeoLocation) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *GeoLocation) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *GeoLocation) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

// Used to identify a stored metric
type MetricIdentifier struct {
	// Use a string identifier for now.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *MetricIdentifier) Reset()                    { *m = MetricIdentifier{} }
func (m *MetricIdentifier) String() string            { return proto.CompactTextString(m) }
func (*MetricIdentifier) ProtoMessage()               {}
func (*MetricIdentifier) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *MetricIdentifier) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type MetricSeries struct {
	Id             string                                   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Title          string                                   `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Description    string                                   `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	DataType       MetricSeries_MetricDataType              `protobuf:"varint,5,opt,name=data_type,json=dataType,enum=metric.MetricSeries_MetricDataType" json:"data_type,omitempty"`
	TagMeta        map[string]*MetricSeries_MetricTagMeta   `protobuf:"bytes,6,rep,name=tag_meta,json=tagMeta" json:"tag_meta,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	DedupeStrategy MetricSeries_MetricDeduplicationStrategy `protobuf:"varint,7,opt,name=dedupe_strategy,json=dedupeStrategy,enum=metric.MetricSeries_MetricDeduplicationStrategy" json:"dedupe_strategy,omitempty"`
}

func (m *MetricSeries) Reset()                    { *m = MetricSeries{} }
func (m *MetricSeries) String() string            { return proto.CompactTextString(m) }
func (*MetricSeries) ProtoMessage()               {}
func (*MetricSeries) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *MetricSeries) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MetricSeries) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *MetricSeries) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *MetricSeries) GetDataType() MetricSeries_MetricDataType {
	if m != nil {
		return m.DataType
	}
	return MetricSeries_NUMBER
}

func (m *MetricSeries) GetTagMeta() map[string]*MetricSeries_MetricTagMeta {
	if m != nil {
		return m.TagMeta
	}
	return nil
}

func (m *MetricSeries) GetDedupeStrategy() MetricSeries_MetricDeduplicationStrategy {
	if m != nil {
		return m.DedupeStrategy
	}
	return MetricSeries_NONE
}

type MetricSeries_MetricTagMeta struct {
	Index       MetricSeries_MetricTagMeta_MetricTagIndexType `protobuf:"varint,1,opt,name=index,enum=metric.MetricSeries_MetricTagMeta_MetricTagIndexType" json:"index,omitempty"`
	Title       string                                        `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Description string                                        `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
}

func (m *MetricSeries_MetricTagMeta) Reset()                    { *m = MetricSeries_MetricTagMeta{} }
func (m *MetricSeries_MetricTagMeta) String() string            { return proto.CompactTextString(m) }
func (*MetricSeries_MetricTagMeta) ProtoMessage()               {}
func (*MetricSeries_MetricTagMeta) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2, 1} }

func (m *MetricSeries_MetricTagMeta) GetIndex() MetricSeries_MetricTagMeta_MetricTagIndexType {
	if m != nil {
		return m.Index
	}
	return MetricSeries_MetricTagMeta_NONE
}

func (m *MetricSeries_MetricTagMeta) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *MetricSeries_MetricTagMeta) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type MetricDatapoint struct {
	Timestamp int64              `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
	Location  *GeoLocation       `protobuf:"bytes,2,opt,name=location" json:"location,omitempty"`
	Tags      map[string]string  `protobuf:"bytes,3,rep,name=tags" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Value     map[string]float64 `protobuf:"bytes,4,rep,name=value" json:"value,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
}

func (m *MetricDatapoint) Reset()                    { *m = MetricDatapoint{} }
func (m *MetricDatapoint) String() string            { return proto.CompactTextString(m) }
func (*MetricDatapoint) ProtoMessage()               {}
func (*MetricDatapoint) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *MetricDatapoint) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *MetricDatapoint) GetLocation() *GeoLocation {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *MetricDatapoint) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *MetricDatapoint) GetValue() map[string]float64 {
	if m != nil {
		return m.Value
	}
	return nil
}

type MetricDatapointWithMeta struct {
	Datapoint *MetricDatapoint  `protobuf:"bytes,1,opt,name=datapoint" json:"datapoint,omitempty"`
	Metric    *MetricIdentifier `protobuf:"bytes,2,opt,name=metric" json:"metric,omitempty"`
}

func (m *MetricDatapointWithMeta) Reset()                    { *m = MetricDatapointWithMeta{} }
func (m *MetricDatapointWithMeta) String() string            { return proto.CompactTextString(m) }
func (*MetricDatapointWithMeta) ProtoMessage()               {}
func (*MetricDatapointWithMeta) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *MetricDatapointWithMeta) GetDatapoint() *MetricDatapoint {
	if m != nil {
		return m.Datapoint
	}
	return nil
}

func (m *MetricDatapointWithMeta) GetMetric() *MetricIdentifier {
	if m != nil {
		return m.Metric
	}
	return nil
}

// Various ways to query a series
type MetricDatapointQuery struct {
	TimeConstraint *MetricDatapointQuery_MetricDatapointTimeConstraint `protobuf:"bytes,1,opt,name=time_constraint,json=timeConstraint" json:"time_constraint,omitempty"`
	TagConstraint  *MetricDatapointQuery_MetricDatapointTagConstraint  `protobuf:"bytes,2,opt,name=tag_constraint,json=tagConstraint" json:"tag_constraint,omitempty"`
}

func (m *MetricDatapointQuery) Reset()                    { *m = MetricDatapointQuery{} }
func (m *MetricDatapointQuery) String() string            { return proto.CompactTextString(m) }
func (*MetricDatapointQuery) ProtoMessage()               {}
func (*MetricDatapointQuery) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *MetricDatapointQuery) GetTimeConstraint() *MetricDatapointQuery_MetricDatapointTimeConstraint {
	if m != nil {
		return m.TimeConstraint
	}
	return nil
}

func (m *MetricDatapointQuery) GetTagConstraint() *MetricDatapointQuery_MetricDatapointTagConstraint {
	if m != nil {
		return m.TagConstraint
	}
	return nil
}

type MetricDatapointQuery_MetricDatapointTimeConstraint struct {
	// If zero, ignored
	MinTime int64 `protobuf:"varint,1,opt,name=min_time,json=minTime" json:"min_time,omitempty"`
	// If zero, ignored
	MaxTime int64 `protobuf:"varint,2,opt,name=max_time,json=maxTime" json:"max_time,omitempty"`
}

func (m *MetricDatapointQuery_MetricDatapointTimeConstraint) Reset() {
	*m = MetricDatapointQuery_MetricDatapointTimeConstraint{}
}
func (m *MetricDatapointQuery_MetricDatapointTimeConstraint) String() string {
	return proto.CompactTextString(m)
}
func (*MetricDatapointQuery_MetricDatapointTimeConstraint) ProtoMessage() {}
func (*MetricDatapointQuery_MetricDatapointTimeConstraint) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{5, 0}
}

func (m *MetricDatapointQuery_MetricDatapointTimeConstraint) GetMinTime() int64 {
	if m != nil {
		return m.MinTime
	}
	return 0
}

func (m *MetricDatapointQuery_MetricDatapointTimeConstraint) GetMaxTime() int64 {
	if m != nil {
		return m.MaxTime
	}
	return 0
}

type MetricDatapointQuery_MetricDatapointTagConstraint struct {
	Tags map[string]*MetricDatapointQuery_MetricDatapointTagConstraint_MetricDatapointTagConstraintTag `protobuf:"bytes,1,rep,name=tags" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *MetricDatapointQuery_MetricDatapointTagConstraint) Reset() {
	*m = MetricDatapointQuery_MetricDatapointTagConstraint{}
}
func (m *MetricDatapointQuery_MetricDatapointTagConstraint) String() string {
	return proto.CompactTextString(m)
}
func (*MetricDatapointQuery_MetricDatapointTagConstraint) ProtoMessage() {}
func (*MetricDatapointQuery_MetricDatapointTagConstraint) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{5, 1}
}

func (m *MetricDatapointQuery_MetricDatapointTagConstraint) GetTags() map[string]*MetricDatapointQuery_MetricDatapointTagConstraint_MetricDatapointTagConstraintTag {
	if m != nil {
		return m.Tags
	}
	return nil
}

type MetricDatapointQuery_MetricDatapointTagConstraint_MetricDatapointTagConstraintTag struct {
	// List of acceptable values
	Value []string `protobuf:"bytes,1,rep,name=value" json:"value,omitempty"`
}

func (m *MetricDatapointQuery_MetricDatapointTagConstraint_MetricDatapointTagConstraintTag) Reset() {
	*m = MetricDatapointQuery_MetricDatapointTagConstraint_MetricDatapointTagConstraintTag{}
}
func (m *MetricDatapointQuery_MetricDatapointTagConstraint_MetricDatapointTagConstraintTag) String() string {
	return proto.CompactTextString(m)
}
func (*MetricDatapointQuery_MetricDatapointTagConstraint_MetricDatapointTagConstraintTag) ProtoMessage() {
}
func (*MetricDatapointQuery_MetricDatapointTagConstraint_MetricDatapointTagConstraintTag) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{5, 1, 1}
}

func (m *MetricDatapointQuery_MetricDatapointTagConstraint_MetricDatapointTagConstraintTag) GetValue() []string {
	if m != nil {
		return m.Value
	}
	return nil
}

func init() {
	proto.RegisterType((*GeoLocation)(nil), "metric.GeoLocation")
	proto.RegisterType((*MetricIdentifier)(nil), "metric.MetricIdentifier")
	proto.RegisterType((*MetricSeries)(nil), "metric.MetricSeries")
	proto.RegisterType((*MetricSeries_MetricTagMeta)(nil), "metric.MetricSeries.MetricTagMeta")
	proto.RegisterType((*MetricDatapoint)(nil), "metric.MetricDatapoint")
	proto.RegisterType((*MetricDatapointWithMeta)(nil), "metric.MetricDatapointWithMeta")
	proto.RegisterType((*MetricDatapointQuery)(nil), "metric.MetricDatapointQuery")
	proto.RegisterType((*MetricDatapointQuery_MetricDatapointTimeConstraint)(nil), "metric.MetricDatapointQuery.MetricDatapointTimeConstraint")
	proto.RegisterType((*MetricDatapointQuery_MetricDatapointTagConstraint)(nil), "metric.MetricDatapointQuery.MetricDatapointTagConstraint")
	proto.RegisterType((*MetricDatapointQuery_MetricDatapointTagConstraint_MetricDatapointTagConstraintTag)(nil), "metric.MetricDatapointQuery.MetricDatapointTagConstraint.MetricDatapointTagConstraintTag")
	proto.RegisterEnum("metric.MetricSeries_MetricDataType", MetricSeries_MetricDataType_name, MetricSeries_MetricDataType_value)
	proto.RegisterEnum("metric.MetricSeries_MetricDeduplicationStrategy", MetricSeries_MetricDeduplicationStrategy_name, MetricSeries_MetricDeduplicationStrategy_value)
	proto.RegisterEnum("metric.MetricSeries_MetricTagMeta_MetricTagIndexType", MetricSeries_MetricTagMeta_MetricTagIndexType_name, MetricSeries_MetricTagMeta_MetricTagIndexType_value)
}

func init() { proto.RegisterFile("github.com/paralin/rethinkts/metric/metric.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 743 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x55, 0x5d, 0x4f, 0x13, 0x5d,
	0x10, 0x66, 0xb7, 0x1f, 0xb4, 0x53, 0x28, 0xcd, 0x79, 0x49, 0xe8, 0x5b, 0x31, 0xd6, 0xf5, 0x86,
	0x2b, 0x4a, 0x6a, 0x08, 0x48, 0xbc, 0x10, 0xa1, 0x21, 0x44, 0x69, 0x75, 0x29, 0x12, 0x6e, 0xac,
	0x87, 0xee, 0x71, 0x39, 0xa1, 0xfb, 0x91, 0xed, 0xd4, 0xd0, 0x5b, 0x7f, 0x82, 0x3f, 0xc6, 0x5f,
	0xa0, 0xf7, 0xfe, 0x20, 0x2f, 0xcc, 0xf9, 0x68, 0x77, 0x5b, 0x61, 0x89, 0x5c, 0x75, 0xe7, 0xcc,
	0x3c, 0xcf, 0xcc, 0x99, 0xf3, 0xcc, 0x14, 0xb6, 0x5c, 0x8e, 0x57, 0xa3, 0xcb, 0xcd, 0x7e, 0xe0,
	0x35, 0x42, 0x1a, 0xd1, 0x01, 0xf7, 0x1b, 0x11, 0xc3, 0x2b, 0xee, 0x5f, 0xe3, 0xb0, 0xe1, 0x31,
	0x8c, 0x78, 0x5f, 0xff, 0x6c, 0x86, 0x51, 0x80, 0x01, 0xc9, 0x2b, 0xcb, 0x3a, 0x82, 0xd2, 0x11,
	0x0b, 0xde, 0x06, 0x7d, 0x8a, 0x3c, 0xf0, 0x49, 0x0d, 0x0a, 0x03, 0x8a, 0x1c, 0x47, 0x0e, 0xab,
	0x1a, 0x75, 0x63, 0xc3, 0xb0, 0xa7, 0x36, 0x59, 0x87, 0xe2, 0x20, 0xf0, 0x5d, 0xe5, 0x34, 0xa5,
	0x33, 0x3e, 0xb0, 0x2c, 0xa8, 0x9c, 0x48, 0xca, 0x63, 0x87, 0xf9, 0xc8, 0x3f, 0x73, 0x16, 0x91,
	0x32, 0x98, 0xdc, 0x91, 0x3c, 0x45, 0xdb, 0xe4, 0x8e, 0xf5, 0x3d, 0x07, 0x4b, 0x2a, 0xe8, 0x94,
	0x45, 0x9c, 0x0d, 0xe7, 0x03, 0xc8, 0x2a, 0xe4, 0x90, 0xe3, 0x40, 0xd1, 0x17, 0x6d, 0x65, 0x90,
	0x3a, 0x94, 0x1c, 0x36, 0xec, 0x47, 0x3c, 0x14, 0x35, 0x56, 0x33, 0xd2, 0x97, 0x3c, 0x22, 0xaf,
	0xa0, 0xe8, 0x50, 0xa4, 0x3d, 0x1c, 0x87, 0xac, 0x9a, 0xab, 0x1b, 0x1b, 0xe5, 0xe6, 0xb3, 0x4d,
	0x7d, 0xdf, 0x64, 0x42, 0x6d, 0x1c, 0x52, 0xa4, 0xdd, 0x71, 0xc8, 0xec, 0x82, 0xa3, 0xbf, 0xc8,
	0x4b, 0x28, 0x20, 0x75, 0x7b, 0x1e, 0x43, 0x5a, 0xcd, 0xd7, 0x33, 0x1b, 0xa5, 0xe6, 0xd3, 0x5b,
	0x09, 0xba, 0xd4, 0x3d, 0x61, 0x48, 0x5b, 0x3e, 0x46, 0x63, 0x7b, 0x11, 0x95, 0x45, 0x2e, 0x60,
	0xc5, 0x61, 0xce, 0x28, 0x64, 0xbd, 0x21, 0x46, 0x14, 0x99, 0x3b, 0xae, 0x2e, 0xca, 0x2a, 0xb6,
	0xd2, 0xaa, 0x10, 0x88, 0x01, 0x57, 0x9d, 0x3f, 0xd5, 0x38, 0xbb, 0xac, 0x88, 0x26, 0x76, 0xed,
	0x23, 0x2c, 0x25, 0x73, 0x92, 0x0a, 0x64, 0xae, 0xd9, 0x58, 0xf7, 0x4c, 0x7c, 0x92, 0x5d, 0xc8,
	0x7d, 0xa1, 0x83, 0x91, 0x6a, 0x5a, 0xa9, 0x69, 0xa5, 0xa4, 0xd4, 0x4c, 0xb6, 0x02, 0xec, 0x99,
	0xbb, 0x46, 0xed, 0x97, 0x01, 0xcb, 0x33, 0x4e, 0xf2, 0x06, 0x72, 0xdc, 0x77, 0xd8, 0x8d, 0xcc,
	0x51, 0x6e, 0x6e, 0xdf, 0xcf, 0x17, 0x5b, 0xc7, 0x02, 0x28, 0x5b, 0xab, 0x38, 0x1e, 0xfa, 0xa2,
	0xd6, 0x1e, 0x90, 0xbf, 0x49, 0x49, 0x01, 0xb2, 0xed, 0x4e, 0xbb, 0x55, 0x59, 0x20, 0x4b, 0x50,
	0x38, 0xed, 0xee, 0xb7, 0x0f, 0xf7, 0xed, 0xc3, 0x8a, 0x21, 0xac, 0xa3, 0x56, 0xe7, 0x5d, 0xe7,
	0xb8, 0xdd, 0xad, 0x98, 0xd6, 0x3a, 0x94, 0x67, 0xdf, 0x99, 0x00, 0xe4, 0xdb, 0x67, 0x27, 0xaf,
	0x5b, 0x76, 0x65, 0xc1, 0x6a, 0xc2, 0xa3, 0x94, 0xfe, 0x27, 0x52, 0x14, 0x21, 0xd7, 0xee, 0xb4,
	0x0f, 0x5a, 0x15, 0xc3, 0xfa, 0x61, 0xc2, 0x4a, 0x4c, 0x19, 0x06, 0xdc, 0x47, 0x31, 0x0e, 0xc8,
	0x3d, 0x36, 0x44, 0xea, 0x85, 0xb2, 0x55, 0x19, 0x3b, 0x3e, 0x20, 0x0d, 0x28, 0x0c, 0xf4, 0x50,
	0xe9, 0x77, 0xf9, 0x6f, 0xd2, 0xc7, 0xc4, 0xbc, 0xd9, 0xd3, 0x20, 0xb2, 0x0d, 0x59, 0xa4, 0xee,
	0xb0, 0x9a, 0xb9, 0x4d, 0x7c, 0xd3, 0xac, 0x42, 0x7f, 0x43, 0x25, 0x3e, 0x19, 0x1e, 0x3f, 0x7e,
	0x56, 0xe2, 0xac, 0xbb, 0x70, 0x1f, 0x44, 0x90, 0x02, 0x2a, 0x40, 0x6d, 0x07, 0x8a, 0x53, 0xb2,
	0x5b, 0x54, 0xb5, 0x9a, 0x54, 0x55, 0x31, 0xa9, 0x98, 0x5d, 0x80, 0x98, 0xed, 0x3e, 0xa4, 0x91,
	0x40, 0x5a, 0x5f, 0x0d, 0x58, 0x9b, 0x2b, 0xec, 0x9c, 0xe3, 0x95, 0x54, 0xdd, 0xb6, 0x1a, 0x61,
	0x79, 0x28, 0xd9, 0x4a, 0xcd, 0xb5, 0x3b, 0x2e, 0x63, 0xc7, 0x91, 0x64, 0x0b, 0xf4, 0x26, 0xd3,
	0x5d, 0xae, 0xce, 0x62, 0xe2, 0x65, 0x64, 0x4f, 0x36, 0xde, 0xef, 0x2c, 0xac, 0xce, 0x11, 0xbe,
	0x1f, 0xb1, 0x68, 0x4c, 0xfa, 0xb0, 0x22, 0xde, 0xaf, 0xd7, 0x0f, 0x7c, 0x31, 0xc5, 0x71, 0x1d,
	0x7b, 0x77, 0xd4, 0x21, 0x61, 0xf3, 0x87, 0x5d, 0xee, 0xb1, 0x83, 0x29, 0x83, 0x5d, 0xc6, 0x19,
	0x9b, 0x7c, 0x82, 0xb2, 0xd8, 0x33, 0x89, 0x1c, 0xaa, 0xee, 0x17, 0xff, 0x94, 0x83, 0xba, 0x89,
	0x14, 0xcb, 0x98, 0x34, 0x6b, 0x67, 0xf0, 0x38, 0xb5, 0x24, 0xf2, 0x3f, 0x14, 0x3c, 0xee, 0xf7,
	0x44, 0x61, 0x5a, 0xb7, 0x8b, 0x1e, 0xf7, 0x45, 0x90, 0x74, 0xd1, 0x1b, 0xe5, 0x32, 0xb5, 0x8b,
	0xde, 0x08, 0x57, 0xed, 0xa7, 0x09, 0xeb, 0x69, 0x65, 0x90, 0x73, 0x2d, 0x60, 0x43, 0x0a, 0xf1,
	0xe0, 0xc1, 0xf7, 0x99, 0x97, 0x78, 0xed, 0x9b, 0x91, 0xae, 0xd4, 0x60, 0x76, 0xff, 0x5d, 0x3c,
	0x3c, 0x73, 0x9a, 0xb3, 0x4b, 0xdd, 0xe4, 0x10, 0xec, 0xc0, 0x93, 0x7b, 0xa2, 0xe3, 0x39, 0x10,
	0x1d, 0x99, 0x4c, 0xd0, 0x65, 0x5e, 0xfe, 0xff, 0x3e, 0xff, 0x13, 0x00, 0x00, 0xff, 0xff, 0x20,
	0x1b, 0xb2, 0x6d, 0xb3, 0x07, 0x00, 0x00,
}
